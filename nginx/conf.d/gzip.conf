### Assuming gzip is not "on" in nginx.conf
##
#Gzip Settings
        #
        # enable or disable gzip  ON|OFF
        #gzip             on;
        # Compression level (1-9).
        # 5 is a perfect compromise between size and cpu usage, offering about
        # 75% reduction for most ascii files (almost identical to level 9).
        #gzip_comp_level  9;
        # Compress all output labeled with one of the following MIME-types.
	#gzip_min_length  1000;
	        
	#gzip_types text/css text/javascript text/xml text/plain text/x-component application/javascript application/x-javascript application/json application/xml  application/rss+xml font/truetype application/x-font-ttf font/opentype application/vnd.ms-fontobject image/svg+xml;

        # This sets the response header Vary: Accept-Encoding.
        # Some proxies have a bug in that they serve compressed content to
        # browsers that don't support it. By setting the Vary: Accept-Encoding
        # header, you instruct proxies to store both a compressed and uncompressed
        # version of the content.
        #gzip_vary         on;
        #gzip_proxied     expired no-cache no-store private auth;
	#gzip_proxied      any; # or expired no-cache no-store private auth;
        # Disable gzip for 'bad' old  browsers
        #gzip_disable      "msie6";
        # gzip_disable      "MSIE [1-6].(?!.*SV1)"; # old value
        #This assigns the number and the size of the compression buffers.
        #gzip_buffers      32 8k;
        # Enable compression both for HTTP/1.0 and HTTP/1.1
        #gzip_http_version 1.1;
        # This should be turned on if you are going to have pre-compressed copies (.gz) of
	# static files available. If not it should be left off as it will cause extra I/O
	# for the check. It is best if you enable this in a location{} block for
	# a specific directory, or on an individual server{} level.
	# gzip_static on;
