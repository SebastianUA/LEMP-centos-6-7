# Rewrite for versioned CSS+JS via filemtime
#location ~* ^.+\.(css|js)$ {
 location ~* \.(css|js)$ {
			   rewrite ^(.+)\.(\d+)\.(css|js)$ $1.$3 last;
			   #expires 31536000s;
			    expires -1;
			   access_log off;
			   log_not_found off;
			  #Gzip
			   include global/gzip.conf;
			  #HEADERS 
			   add_header Pragma "public";
			   add_header Cache-Control "max-age=31536000, public";
			   add_header Vary Accept-Encoding;
			  # in test
			   #add_header Access-Control-Allow-Origin "*";
			 }
# Aggressive caching for static files
 location ~* \.(asf|asx|wax|wmv|wmx|avi|bmp|class|divx|doc|docx|eot|exe|gif|gz|gzip|ico|jpg|jpeg|jpe|mdb|mid|midi|mov|qt|mp3|m4a|mp4|m4v|mpeg|mpg|mpe|mpp|odb|odc|odf|odg|odp|ods|odt|ogg|ogv|otf|pdf|png|pot|pps|ppt|pptx|ra|ram|svg|svgz|swf|tar|t?gz|tif|tiff|ttf|wav|webm|wma|woff|wri|xla|xls|xlsx|xlt|xlw|zip)$ {
				expires 31536000s;
				#Запретить кэширование браузерам (например для отслеживания запросов)
				#expires -1;
				access_log off;
				log_not_found off;
			       #Gzip
			        include global/gzip.conf;
			       #HEADERS
				add_header Pragma "public";
				add_header Cache-Control "max-age=31536000, public";
				add_header Vary Accept-Encoding;
				#add_header Cache-Control private;
			       #in test		 
				#add_header Access-Control-Allow-Origin "*";
				}
# cache.appcache, your document html and data
 location ~* \.(?:html?|xml|json)$ {
				     expires -1;
				     access_log off;
				     log_not_found off;
				   }
