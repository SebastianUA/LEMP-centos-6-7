location ~ \.php$ {
				  # This fix shoudn't work though, if nginx and php are not on the same server, other options exist (like unauthorizing php execution within upload folder)
				  # More on this serious security concern in the "Pass Non-PHP Requests to PHP" section, there http://wiki.nginx.org/Pitfalls
				  try_files $uri =404;
				  # PHP	
			   	  # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
				  # If using a TCP connection...
				   fastcgi_pass   127.0.0.1:9000;
				  # If using a unix socket...
				   # fastcgi_pass unix:/tmp/php5-fpm.sock;	
				  fastcgi_cache fastcgicache;
        			  fastcgi_cache_valid any 1m;
        			  fastcgi_cache_use_stale error timeout invalid_header http_500;
				  fastcgi_split_path_info ^(.+\.php)(/.+)$;
				  fastcgi_index  index.php;
				  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		                  fastcgi_param PATH_INFO $fastcgi_path_info;
				 #Turn on|off HTTPS
				  fastcgi_param HTTPS on;
			          fastcgi_param modHeadersAvailable true; #Avoid sending the security headers twice
				  include fastcgi_params;
				  fastcgi_param  QUERY_STRING     $query_string;
				  fastcgi_param  REQUEST_METHOD   $request_method;
				  fastcgi_param  CONTENT_TYPE     $content_type;
				  fastcgi_param  CONTENT_LENGTH   $content_length;
				  
				  fastcgi_param   DOCUMENT_ROOT      $document_root; # /home/www/document_root;
      				   #fastcgi_param   SCRIPT_FILENAME /home/www/document_root$fastcgi_script_name;
      				  fastcgi_param   SCRIPT_NAME  $fastcgi_script_name;
				  fastcgi_param   SERVER_ADDR     $server_addr;
      				  fastcgi_param   SERVER_PORT     $server_port;
				  fastcgi_param   SERVER_NAME     $server_name;
				  fastcgi_param   SERVER_PROTOCOL $server_protocol;
      				  fastcgi_param   SERVER_SOFTWARE "nginx-DICK!";
      				  fastcgi_param   GATEWAY_INTERFACE       "CGI/1.1";
      				  fastcgi_param   REQUEST_URI     $request_uri;
			 	  fastcgi_param   DOCUMENT_URI     $document_uri; 
				  fastcgi_param   REMOTE_USER     $remote_user;
      				  fastcgi_param   REMOTE_ADDR     $remote_addr;
      				  fastcgi_param   REMOTE_PORT     $remote_port;
				 #SSL
				  fastcgi_param SSL_VERIFIED $ssl_client_verify;
			 	  fastcgi_param SSL_CLIENT_SERIAL $ssl_client_serial;
				  fastcgi_param SSL_CLIENT_CERT $ssl_client_cert;
				  fastcgi_param SSL_DN $ssl_client_s_dn;
				 # Turn on|off intercept errors 
				  fastcgi_intercept_errors        on;
				  fastcgi_ignore_client_abort     off;
				  fastcgi_connect_timeout 60;
				  fastcgi_send_timeout 180;
				  fastcgi_read_timeout 180;
				  fastcgi_buffers 4 256k;
				  fastcgi_buffer_size 128k;
				  fastcgi_busy_buffers_size 256k;
				  fastcgi_temp_file_write_size 256k;
				  fastcgi_keep_conn on;
				  #Placing a page cache, after 3 usages. Fewer made me difficult to explain the glitches on the registration form
				   fastcgi_cache_min_uses 3;
       				  #Cache listed answers
				   fastcgi_cache_valid 200 301 302 304 5m;
				  #The format of the hash key this key is finding the right page nginx
				   fastcgi_cache_key "$request_method|$host|$request_uri";
			        			
				 }
# end "local ~ \.php" parameters
